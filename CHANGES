Noteworthy changes
==================

Breaking changes are usually introduced in a major version bump,
new features are introduced in minor version bumps.

1.2.0
-----

png, pdf, html functions are now immediate,  
one must call `wait('load')`, `wait('ready')`, `wait('idle')` before,  
to make sure it's in an expected state.


1.6.0
-----
```
on('request', function(req) {
	// use
	req.cancel = true;
	// instead of
	req.uri = null;
	// or even
	delete req.uri;
	// all forms are supported but the first one is safer style
});
```


1.7.0
-----

Load options stylesheet and css are now available only as `style`, a Buffer or
a String, inserted as *user style*.
The reason is to simplify API and also that it is not up to this module to load
data from files.


1.8.0
-----

Life events (ready, load, idle, unload) cannot be listened when next event has
already happened - this is made to prevent waiting for an event that's not
going to happen.
If the event already happened but next event has not happened yet, the listener
is immediately called back.
If the event loop is stopped and a listener for a future life event is registered,
it restarts the loop waiting for the next event.


1.9.0
-----

pdf options replaces {fullpage: true} by {margins: 0}.


1.10.0
------

Facilitate arguments passing with run(
  function(any, number, of, args, cb),
  {a:1}, 34, "number", [],
  function(err, some, returned, args) {
  }
);


1.11.0
------

.html() now returns the document html prepended with its doctype declaration.

1.12.0
------

idle event is more accurate. Happens once after load event.
Further activity is tracked by repeated on('busy') events.
Remove special inspector code, which paused debugger on load.

1.13.0
------

rewritten all code concerning preloading of a page - might have minor
side effects.
Added transparency support.

1.14.0
------

changed the effect of width, height - it actually sets the window size, now
the "gui" release !

1.15.0
------

changed signature of `done` in .run(..., done) and gave precisions about
that. Otherwise it was impossible to chain an async script after completion
of a run call.

1.16.0
------

req.ignore does not wait for requests to finish when deciding for idle event.

1.17.0
------

changed signature of .run() again.
The optional parameter(s) is either alone or an array, to ensure .run() has
definite max arguments length.
Code doing 
`.run(script, arg1, arg2, ...)`
must replace it by
`.run(script, [arg1, arg2], ...)`
If only one argument was passed, that operation is done automatically.

1.18.0
------

registering an event listener using wait(ev) for an event that already happened
has now the same behavior as when the event just happened.


2.0.0
-----

The chainable API has been dropped.
.wait can be replaced by .when, see README.

.run(script, param1, param2, ..., cb) like .runev,
and there is only one callback, as a consequence of dropping chainable API.


2.1.0
-----

Added cookiePolicy instance (init) option.

"idle" event is now much more accurate - meaning it can hang sometimes too,
though it would be considered a bug in that case.


2.2.0
-----

No API change but partial fallback to jsdom is available when bindings are not buildable.

2.3.0
-----

No more complex gtk loop management. The gtk loop is run for all modules in the default uv loop.
Main change: it's not possible to "pause" a view (it wasn't really possible anyway),
and it's no longer necessary to listen "unload" event to keep events running.

2.4.0
-----

All async run() calls have a default runTimeout, settable between loads.

3.0.0
-----

The req object received in the request event is now read-only.

One must now use the load method options `filter` which can be given
additional arguments with `filterArgs`.
This is a major change and also a performance improvement.


3.1.0
-----

Crucial change in the way intervals and timeouts account for idle event,
with the introduction of two load parameters: stallTimeout, stallInterval.
They ensure current timeouts or intervals will not prevent an idle
after those respective durations, thus preventing a never-occuring idle
event on some sites.

This change breaks version 3.0.6 with its cutInterval, cutTimeout - they
were a less efficient attempt at solving the same problem.


3.2.0
-----

With a REPL installed as "webkitgtk".
See `webkitgtk --help`

3.3.0
-----

Add data event.

3.3.1
-----

Always download resources, even if mime type is not supported.

3.4.0
-----

Give access to all WebKitSettings options,
deprecate the options that were renamed arbitrarily, see deprecations in README.

3.5.0
-----

Add a `navigate` event that allows, in conjonction with `navigation` option
to handle redirection.

3.6.0
-----

Shouldn't be a breaking change: default user-agent is now the one set by the
backend (webkitgtk or jsdom), not "Mozilla/5.0".

3.6.3
-----

Officialize the fact that filters never received a populated this.headers by
removing it from documentation.

Support console.trace, and provide better output for errors.

3.6.4
-----

Setting document.location early could stop document while loading and
make client internal script miss the load event.

3.6.5
-----

Add load 'scripts' option.

3.6.6
-----

allow: "same-origin" now allows data:uri.

4.0.0
-----

Expose a promise-based API, expose WebKit.navigator constant.

Bump major because there might be subtle incompatibilities.

4.1.0
-----

stallTimeout ignores timeouts after a given period of time since page opening.
This is good to make sure recurring timeouts do not prevent 'idle' event; this
was bad because it led to ignoring zero-timeouts (the ones used to queue tasks).
This is fixed in this version and it should give better 'idle' behavior.

webkitgtk 2.12 library has an implementation of Promise that has an unpredictable
micro-task queue behavior, leading to some tasks not being run before next
setTimeout task queue, and those tasks could then not be run before idle event.
To fix this, we use another Promise implementation that uses asap module and leads
to a more predictable behavior. This is a workaround - but monkey-patching
Promise object is too difficult for the author :)

4.2.0
-----

Do not catch errors from thenables added in when().


4.3.0
-----

- cacheModel option to choose between cache models. Defaults to "web", a change
w.r.t. previous versions where it was "none".
- reset(cb) allows one to do a quicker .load() calls on same instance


4.4.7
-----

- not a breaking change, but worth knowing: idle event now tracks loading of
script[src], link[href] tags that are inserted by javascript.


4.5.0
-----

- Feature: settings.script now accepts plain js code (it used to accept only
  statements returning a value). This is useful to inject custom libs.

4.6.0
-----

- margins can now be a string with units (feature)
- setting orientation works again

4.7.0
-----

- support "fetch" for idle event

4.8.0
-----

- add "resizing" option to allow window resizeTo/moveTo/resizeBy/moveBy


4.8.3
-----

- make fetch() return polyfilled promise instance instead of internal one,
in some high load scenarios this avoids missing end of promise chain.
- fix a segfault by cleaning up GeometryChanged event listener on destroy

